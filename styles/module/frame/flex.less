/*
 * Name:            flex布局
 * 
 * Description:     结构信息模块
 * 
 * Component:   `vg-row`,`vg-col`
 
 * Satus:       `offset-s*`, `m*`, `offset-m*`, `l*`, `offset-l*`     
 */
 /********** Flex 布局 **********/
 //flex 水平自动宽度
.vg-row{
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  width: 100%;
  height: 100%;
  .col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col,
  .col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm,
  .col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md,
  .col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg,
  .col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl,
  .col-xl-auto {
    min-height: 1px;
    position: relative;
    width: 100%;
    height: 100%;
  }
}

//定义
#fos(@n,@name){
  //循环得到‘ .col/.offset/.order’
  #collayout(@n, @name, @i:1, @j:0) when (@i <= @n),(@j <= @n){
    //12等分
    .col@{name}@{i}{
      -ms-flex: 0 0 calc(@i*100%/@n);
      flex: 0 0 calc(@i*100%/@n);
      max-width: calc(@i*100%/@n);
    }
    //左外边距
    .offset@{name}@{i}{
      margin-inline-start:calc(@i*100%/@n);
    }
    //排列顺序
    .order@{name}@{j}{
      -ms-flex-order: @j;
      order: @j;
    }
  
    #collayout(@n,@name, @i+1, @j+1);
  }
  #collayout(@n,@name);
  
  //正常显示‘ .fill ’
  #fill_1(@name) when (@name = ~"-"){
    .fill{
      -ms-flex-preferred-size: 0;
      flex-basis: 0;
      -ms-flex-positive: 1;
      flex-grow: 1;
      max-width: 100%;
      height: 100%;
    }
  }
  #fill_2(@name) when (@name = ~"-sm-"){
    .fill-sm{
      -ms-flex-preferred-size: 0;
      flex-basis: 0;
      -ms-flex-positive: 1;
      flex-grow: 1;
      max-width: 100%;
    }
  }
  #fill_3(@name) when (@name = ~"-md-"){
    .fill-md{
      -ms-flex-preferred-size: 0;
      flex-basis: 0;
      -ms-flex-positive: 1;
      flex-grow: 1;
      max-width: 100%;
    }
  }
  #fill_4(@name) when (@name = ~"-lg-"){
    .fill-lg{
      -ms-flex-preferred-size: 0;
      flex-basis: 0;
      -ms-flex-positive: 1;
      flex-grow: 1;
      max-width: 100%;
    }
  }
  #fill_5(@name) when (@name = ~"-xl-"){
    .fill-xl{
      -ms-flex-preferred-size: 0;
      flex-basis: 0;
      -ms-flex-positive: 1;
      flex-grow: 1;
      max-width: 100%;
    }
  }
  #fill_1(@name);
  #fill_2(@name);
  #fill_3(@name);
  #fill_4(@name);
  #fill_5(@name);
  
  //清除 .col样式
  .col@{name}auto{
    -ms-flex: 0 0 auto;
    flex: 0 0 auto; //flex:none
    max-width: none;
    width: auto; 
  }
  
  //排在最前
  .order@{name}first{
    -ms-flex-order: -1;
    order: -1;
  }
  
  //排在最后
  .order@{name}last{
    -ms-flex-order: @n + 1;
    order: @n + 1;
  }
}
#fos(12,~"-");
 
/********** 媒体查询 **********/
@media (min-width: 576px) {#fos(12,~"-sm-");}

@media (min-width: 768px) {#fos(12,~"-md-");}

@media (min-width: 992px) {#fos(12,~"-lg-");}

@media (min-width: 1200px) {#fos(12,~"-xl-");}

// 自动化布局结构
#flex_colauto(@direction:initial;@flex:1;){
  display: flex;
  flex-direction: @direction;
  .autoflex{
      flex: @flex;
  }
}



.autoflex{flex: 1;}

// 水平自动化结构
.colauto{
  #flex_colauto();
  flex: 1;
  &.rowcenter{
    align-items: center;
  }
}


// 垂直自动化结构
.rowauto{
  #flex_colauto(column;);
  flex: 1;
  &.rowcenter{
    justify-content: center;
  }
}


// 垂直自动化滚动结构
.rowoverflow{
  #flex_colauto(column;);
  flex: 1;
  height: 100%;
}